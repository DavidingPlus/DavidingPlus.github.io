# Code 分支推送部署预览
## 仅部署 Win 端
name: Build Code

on:
  push:
    branches:
      - code

jobs:
  release:
    name: Build Website
    runs-on: windows-latest

    steps:
      # 检出 Git 仓库
      - name: Check out git repository
        uses: actions/checkout@v4.1.1
      # 安装 Node.js
      - name: Install Node.js
        uses: actions/setup-node@v4.0.0
        with:
          node-version: "18.x"
      # 复制环境变量文件
      - name: Copy .env.example
        run: |
          if (-not (Test-Path .env)) {
            Copy-Item .env.example .env
          } else {
            Write-Host ".env file already exists. Skipping the copy step."
          }
      # 安装项目依赖
      - name: Install Dependencies
        run: npm install
      # 构建程序
      - name: Build Website
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      # 上传构建产物
      - name: Upload artifacts
        # 选择合适的版本 https://github.com/actions/upload-artifact/
        uses: actions/upload-artifact@v4.3.0
        with:
          name: Homepage
          path: dist
        
      # TODO 以下是自动化将打包的静态页面部署到 gh-pages 分支的脚本

      # 下载构建产物
      - name: Download artifacts
        # 选择合适的版本 https://github.com/actions/download-artifact/
        uses: actions/download-artifact@v4.1.0
        with:
          name: Homepage
          path: public
      # 部署到 gh-pages 分支
      - name: Deploy to gh-pages
        # 注意这下面的命令全都是 windows 下的命令
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git clone --depth=1 --branch=gh-pages https://github.com/${{ github.repository }} gh-pages
          Remove-Item -Recurse -Force gh-pages\public
          Copy-Item -Recurse -Force public gh-pages\
          cd gh-pages
          git add .
          git commit -m "Update public directory automatically"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
